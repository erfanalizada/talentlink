name: CI/CD

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  packages: write   # required for pushing to GHCR

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # âœ… Fixed: Log in to GHCR using your PAT
      - name: Log in to GHCR
        run: echo "${{ secrets.GHCR_TOKEN }}" | docker login ghcr.io -u erfanalizada --password-stdin

      - name: Build & push backend
        run: |
          docker build -t ghcr.io/erfanalizada/talentlink-backend:latest ./backend
          docker push ghcr.io/erfanalizada/talentlink-backend:latest

      - name: Build & push frontend
        run: |
          docker build -t ghcr.io/erfanalizada/talentlink-frontend:latest ./frontend
          docker push ghcr.io/erfanalizada/talentlink-frontend:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install OCI CLI
        run: |
          pip install --upgrade pip
          pip install oci-cli
          oci --version

      - name: Configure OCI CLI
        run: |
          mkdir -p $HOME/.oci
          echo "${{ secrets.OCI_CONFIG }}" | base64 --decode > $HOME/.oci/config
          echo "${{ secrets.OCI_KEY }}" | base64 --decode > $HOME/.oci/oci_api_key.pem
          chmod 600 $HOME/.oci/oci_api_key.pem

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy manifests
        run: kubectl apply -f k8s/

      - name: Restart backend deployment
        run: kubectl rollout restart deployment backend --namespace=default

      - name: Restart frontend deployment
        run: kubectl rollout restart deployment frontend --namespace=default

      - name: Get pods after deploy
        run: kubectl get pods -n default -o wide

      - name: Get frontend service external IP
        run: kubectl get svc frontend-service -n default -o wide
