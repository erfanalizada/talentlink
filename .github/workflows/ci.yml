name: CI/CD - user-service only

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  # ---------------------------------------------------------
  # Buildx + QEMU Setup
  # ---------------------------------------------------------
  buildx-setup:
    runs-on: ubuntu-latest
    outputs:
      buildx-cache-key: ${{ steps.set-cache-key.outputs.key }}
    steps:
      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx (container driver)
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            network=host

      - id: set-cache-key
        run: echo "key=$(date +%s)" >> "$GITHUB_OUTPUT"

  # ---------------------------------------------------------
  # USER SERVICE
  # ---------------------------------------------------------
  build-and-deploy-user:
    runs-on: ubuntu-latest
    needs: buildx-setup
    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build & push user-service (ARM64)
        uses: docker/build-push-action@v6
        with:
          context: ./backend/user-service
          file: ./backend/user-service/Dockerfile
          push: true
          platforms: linux/arm64
          tags: |
            ghcr.io/${{ github.actor }}/user-service:${{ github.sha }}
            ghcr.io/${{ github.actor }}/user-service:latest

      - name: Install OCI CLI
        run: pip install --upgrade pip && pip install oci-cli

      - name: Configure OCI CLI
        run: |
          mkdir -p $HOME/.oci
          echo "${{ secrets.OCI_CONFIG }}" | base64 --decode > $HOME/.oci/config
          echo "${{ secrets.OCI_KEY }}" | base64 --decode > $HOME/.oci/oci_api_key.pem
          chmod 600 $HOME/.oci/config
          chmod 600 $HOME/.oci/oci_api_key.pem

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      - name: Deploy user-service to cluster
        run: |
          kubectl set image deployment/user-service user-service=ghcr.io/${{ github.actor }}/user-service:${{ github.sha }} -n default
          kubectl rollout status deployment/user-service -n default
          kubectl get pods -n default -o wide
