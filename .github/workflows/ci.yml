name: CI/CD - user-service (ARM64)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-and-deploy-user:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout repository
      - uses: actions/checkout@v4

      # 2️⃣ Enable QEMU for ARM emulation
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # 3️⃣ Enable Docker Buildx (multi-platform builder)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Log in to GitHub Container Registry
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      # 5️⃣ Build & push ARM64 image
      - name: Build & Push user-service (ARM64)
        run: |
          docker buildx build \
            --platform linux/arm64 \
            -t ghcr.io/${{ github.actor }}/user-service:${{ github.sha }} \
            -t ghcr.io/${{ github.actor }}/user-service:latest \
            --push \
            ./backend/user-service

      # 6️⃣ Install and configure OCI + kubeconfig
      - name: Install OCI CLI
        run: pip install --upgrade pip && pip install oci-cli

      - name: Configure OCI CLI
        run: |
          mkdir -p $HOME/.oci
          echo "${{ secrets.OCI_CONFIG }}" | base64 --decode > $HOME/.oci/config
          echo "${{ secrets.OCI_KEY }}" | base64 --decode > $HOME/.oci/oci_api_key.pem
          chmod 600 $HOME/.oci/config $HOME/.oci/oci_api_key.pem

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG_DATA }}" | base64 --decode > $HOME/.kube/config
          chmod 600 $HOME/.kube/config

      # 7️⃣ Deploy to Kubernetes
      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/user-service user-service=ghcr.io/${{ github.actor }}/user-service:${{ github.sha }} -n default
          kubectl rollout status deployment/user-service -n default
          kubectl get pods -n default -o wide
