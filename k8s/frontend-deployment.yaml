apiVersion: apps/v1                        # API version for Deployment
kind: Deployment                           # Resource type is Deployment
metadata:
  name: frontend                           # Name of the Deployment
  labels:
    app: frontend                          # Label to identify this app
spec:
  replicas: 2                              # Run 2 replicas for high availability
  selector:
    matchLabels:
      app: frontend                        # Deployment targets pods with this label
  template:
    metadata:
      labels:
        app: frontend                      # Pod template gets "app=frontend" label
    spec:
      imagePullSecrets:
        - name: ghcr-secret                # Secret with GHCR credentials for pulling private image
      containers:
        - name: frontend                   # Container name
          image: ghcr.io/erfanalizada/talentlink-frontend:latest   # Frontend image
          imagePullPolicy: Always          # Always pull the latest image
          ports:
            - containerPort: 80            # Container listens on port 80 (HTTP)
          resources:                       # Resource requests and limits
            requests:
              cpu: "100m"                  # Minimum CPU (0.1 core) reserved
              memory: "128Mi"              # Minimum memory reserved (128 MB)
            limits:
              cpu: "500m"                  # Max CPU allowed (0.5 core)
              memory: "512Mi"              # Max memory allowed (512 MB)
          readinessProbe:                  # Probe to check if pod is ready to serve traffic
            httpGet:
              path: /index.html            # Checks if index.html is served
              port: 80                     # On port 80
            initialDelaySeconds: 5         # Wait 5s before first check
            periodSeconds: 10              # Run probe every 10s
          livenessProbe:                   # Probe to check if pod is alive
            httpGet:
              path: /index.html            # Checks index.html is still served
              port: 80                     # On port 80
            initialDelaySeconds: 10        # Wait 10s before first check
            periodSeconds: 20              # Run probe every 20s
---
apiVersion: v1                             # API version for Service
kind: Service                              # Resource type is Service
metadata:
  name: frontend-service                   # Name of the Service
spec:
  type: LoadBalancer                       # Expose service externally via OCI LoadBalancer
  selector:
    app: frontend                          # Selects pods with label "app=frontend"
  ports:
    - port: 80                             # Service listens on port 80
      targetPort: 80                       # Forwards to containerPort 80 inside pod
