apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
  namespace: default
  labels:
    app: auth-service
spec:
  replicas: 2
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: ghcr.io/erfanalizada/auth-service:latest   # âœ… your actual image
          imagePullPolicy: Always
          ports:
            - containerPort: 5000
              name: http

          # --- Environment variables ---
          envFrom:
            - secretRef:
                name: auth-db-secret         # Database connection info
            - secretRef:
                name: keycloak-admin-secret  # Keycloak admin credentials

          env:
            # --- Keycloak setup ---
            - name: KEYCLOAK_URL
              value: "https://talentlink-erfan.nl/auth"
            - name: KEYCLOAK_REALM
              value: "talentlink"

            # The client your backend uses for admin access
            - name: KEYCLOAK_ADMIN_CLIENT_ID
              value: "auth-service"

            # The client your Flutter frontend uses for login
            - name: KEYCLOAK_LOGIN_CLIENT_ID
              value: "frontend-client"

            # Optional: Flask runtime
            - name: FLASK_ENV
              value: "production"

          # --- Health checks ---
          readinessProbe:
            httpGet:
              path: /api/auth/dbtest
              port: 5000
            initialDelaySeconds: 15
            periodSeconds: 10

          livenessProbe:
            httpGet:
              path: /api/auth/dbtest
              port: 5000
            initialDelaySeconds: 30
            periodSeconds: 15

          # --- Resource limits ---
          resources:
            requests:
              cpu: "250m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"

